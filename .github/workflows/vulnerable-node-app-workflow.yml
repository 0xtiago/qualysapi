name: OWASP Vulnerable Node Application - Build Action with QUALYS WAS API scan.
on:
  push:
    branches:
      - main
    paths:
      - examples/apps/vulnerable-node-app/**
  pull_request:
    branches: 
      - main
    paths:
      - examples/apps/vulnerable-node-app/**

jobs:
  build:
    runs-on: ubuntu-22.04
    environment: Qualys
    steps:
    - uses: actions/checkout@v3
    - name: Setup Ubuntu Runner
      run: |
        sudo apt update
        sudo apt install -y sudo net-tools wget git curl p7zip-full ca-certificates apt-transport-https software-properties-common pssh python3 python3-pip python-setuptools
    
    - name: Connecting remote web server and building OWASP Vulnerable Node Application
      continue-on-error: true
      env:
        SSH_SERVER: ${{ secrets.SSH_SERVER }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "-----BEGIN OPENSSH PRIVATE KEY-----" > /tmp/server.key
        echo $SSH_KEY | base64 -w0 | base64 --decode | tr " " "\n" | tail -n +5 | head -n-4 >> /tmp/server.key
        echo "-----END OPENSSH PRIVATE KEY-----" >> /tmp/server.key
        sudo chmod 600 /tmp/server.key
        cat /tmp/server.key
        
        parallel-ssh -H $SSH_USER@$SSH_SERVER -i -x "-i /tmp/server.key -o StrictHostKeyChecking=no" 'date'
        parallel-ssh -H $SSH_USER@$SSH_SERVER -i -x "-i /tmp/server.key -o StrictHostKeyChecking=no" 'rm -rf NodeGoat'
        parallel-ssh -H $SSH_USER@$SSH_SERVER -i -x "-i /tmp/server.key -o StrictHostKeyChecking=no" 'git clone https://github.com/0xtiago/NodeGoat ; sleep 30'
        parallel-ssh -H $SSH_USER@$SSH_SERVER -i -x "-i /tmp/server.key -o StrictHostKeyChecking=no" 'cd NodeGoat ; docker-compose build && docker-compose up -d ; sleep 30'


    - name: Download qualysapi from Github and executing - Kudos to VIA team!
      env:
        SSH_SERVER: ${{ secrets.SSH_SERVER }}
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }} 
        QUALYS_SCANNER_TYPE: ${{ vars.QUALYS_SCANNER_TYPE }}
        QUALYS_URL: ${{ vars.QUALYS_URL }}
        QUALYS_USER: ${{ secrets.QUALYS_USER }}
        QUALYS_USER_PASS: ${{ secrets.QUALYS_USER_PASS }}
        QUALYS_PROJECT_NAME: ${{ vars.QUALYS_PROJECT_NAME }}
        QUALYS_WEBAPP_ID: ${{ vars.QUALYS_WEBAPP_ID }}
        QUALYS_OPTION_PROFILE_ID: ${{ vars.QUALYS_OPTION_PROFILE_ID }}
        QUALYS_SEND_REPORT: ${{ vars.QUALYS_SEND_REPORT }}
        QUALYS_ENCRYPT_REPORT: ${{ vars.QUALYS_ENCRYPT_REPORT }}
        QUALYS_ENCRYPT_PASS: ${{ secrets.QUALYS_ENCRYPT_PASS }}
        QUALYS_REPORT_RECEIVERS: ${{ vars.QUALYS_REPORT_RECEIVERS }}
      run: |
        
        git clone https://github.com/0xtiago/qualysapi
        cd qualysapi
        chmod +x qualysapi.sh 

        echo $QUALYS_SCANNER_TYPE
        echo $QUALYS_URL
        echo $QUALYS_USER
        echo $QUALYS_USER_PASS
        echo $QUALYS_PROJECT_NAME
        echo $QUALYS_WEBAPP_ID
        echo $QUALYS_OPTION_PROFILE_ID
        echo $QUALYS_SEND_REPORT
        echo $QUALYS_ENCRYPT_REPORT
        echo $QUALYS_ENCRYPT_PASS
        echo $QUALYS_REPORT_RECEIVERS
        ./qualysapi.sh | tee -a log/qualysapi.log



  
